{"version":3,"sources":["components/about.js","components/login.js","config.js","components/home.js","components/playlist.js","components/color.js","components/error.js","components/pagenotfound.js","components/main.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["About","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","React","Component","Login","props","_this","call","state","token","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","concat","join","Home","loggedIn","message","queryString","parse","setState","react_router","to","pathname","react_router_dom","Playlist","history","push","moodOption","artists","hex","hsl","h","s","l","rgb","r","g","b","artistQuery","userId","getPlaylist","bind","assertThisInitialized","_this2","recommendations_api","create_playlist_api","energy","valence","fetch","method","headers","Authorization","then","response","ok","Error","json","data","songs","tracks","forEach","song","uri","body","JSON","stringify","name","description","public","playlistURI","external_urls","spotify","playlistId","id","catch","error","console","log","embedURI","style","color","src","title","height","frameBorder","allowtransparency","allow","Color","handleChangeComplete","isSelected","getTopArtists","getUser","statusText","items","query","artist","_this3","es","onChange","disableAlpha","disabled","redirect","setTimeout","clearTimeout","PageNotFound","Main","exact","path","component","Header","App","header_Header","main","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f140365.chunk.js","sourcesContent":["import React from \"react\";\n\nimport '../css/app.css';\nimport '../css/index.css';\n\nexport default class About extends React.Component {\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"title\">about</div>\n\n        <div className=\"body-text\">\n          Moody Music is a web app that uses color to generate a personalized playlist based on your Spotify listening history.<br/><br/>\n          Created by <a href=\"https://alicemliu.github.io\">Alice Liu</a>. The source code can be found <a href=\"https://github.com/alicemliu/moody-music\">here</a>.\n        </div>\n        \n        <div className=\"subtitle\">technology</div>\n        <div className=\"body-text\">\n          Moody Music is built with <a href=\"https://create-react-app.dev/\">create-react-app</a> and <a href=\"https://developer.spotify.com/documentation/web-api/\">Spotify's Web API</a>. It runs completely client-side and is deployed on Heroku.<br/><br/>\n          Although I used Spotify's API, I'm not affiliated with Spotify.\n        </div>\n\n        <div className=\"subtitle\">privacy</div>\n        <div className=\"body-text\">\n          Spotify authorization is handled using <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\">implicit grant flow</a>, meaning that all account authorization happens in your browser and no account data is being stored by Moody Music.\n          Because of this, tokens expire after an hour, which is why you might be promoted to log in again after periods of inactivity.\n        </div>\n\n        <div className=\"icons\">\n          <a href=\"https://www.linkedin.com/in/alicemliu/\"><i className=\"fa fa-linkedin-square\"></i></a>\n          <a href=\"https://www.github.com/alicemliu/\"><i className=\"fa fa-github\"></i></a>\n          <a href=\"https://twitter.com/alicemliu\"><i className=\"fa fa-twitter-square\"></i></a>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { CLIENTID, REDIRECTURL } from '../config.js'\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {token: \"\"};\n  }\n\n  componentDidMount() {\n    const hash = window.location.hash\n    .substring(1)\n    .split('&')\n    .reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\n    window.location.hash = '';\n\n    // Set token\n    let _token = hash.access_token;\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n    // Replace with your app's client ID, redirect URI and desired scopes\n    const clientId = CLIENTID;\n    const redirectUri = REDIRECTURL;\n    const scopes = [\n      'user-top-read',\n      'playlist-modify-private',\n      'playlist-modify-public'\n    ];\n\n    // If there is no token, redirect to Spotify authorization\n    if (!_token) {\n      window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n    }\n  }\n\n  render() {\n    return (\n      <div className='content'>\n        <span className=\"subtitle\">Authorizing...</span>\n      </div>\n    );\n  }\n}","// Create application in Spotify Developer Dashboard, \n// then replace with your client ID and redirect URIError.\n// https://developer.spotify.com/dashboard/applications\n\nexport const CLIENTID = '5230258282ca42bfb5ab68558b0a4f27';\nexport const REDIRECTURL = 'https://moodymusicapp.herokuapp.com/';","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport queryString from 'query-string';\n\nimport '../css/app.css';\nimport '../css/index.css';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\",\n      loggedIn: false,\n      message: \"Log in with Spotify to get started!\"\n    };\n  }\n\n  componentDidMount() {\n    let params = queryString.parse(window.location.hash);\n    let token = params.access_token\n\n    if (token) {\n      this.setState(state => ({\n        token: token,\n        loggedIn: true,\n        message: \"Authentication successful.\"\n      }));\n    }\n    else {\n      this.setState(state => ({\n        token: token,\n        loggedIn: false,\n        message: \"\"\n      }));\n    }\n  }\n\n  render() {\n    const loggedIn = this.state.loggedIn\n    return (\n      <div className=\"content\">\n        <div className=\"title\">moody music 🎶</div>\n        <div className=\"body-text\">\n          A colorful, personalized playlist generator.<br/>\n        </div>\n\n        { loggedIn\n          ?\n          <Redirect to={{\n            pathname: '/color',\n            state: { token: this.state.token }\n          }}/>\n          :\n          <Link to='/login'>\n            <button className=\"round_btn\">Login with Spotify</button>\n          </Link>\n        }\n      </div>\n    );\n  }\n}","import React from \"react\";\n\nexport default class Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    if (typeof this.props.location.state === 'undefined') {\n      this.props.history.push(\"/error\");\n      this.state = {\n        token: '',\n        moodOption: '',\n        artists: [],\n        hex: '#ffffff',\n        hsl: { h: 0, s: 0, l: 1 },\n        rgb: { r: 0, g: 0, b: 0 },\n        artistQuery: '',\n        userId: ''\n      };\n    }\n    else {\n      this.state = {\n        token: this.props.location.state.token,\n        moodOption: this.props.location.state.moodOption,\n        hex: this.props.location.state.hex,\n        hsl: this.props.location.state.hsl,\n        rgb: this.props.location.state.rgb,\n        artists: this.props.location.state.artists,\n        artistQuery: this.props.location.state.artistQuery,\n        userId: this.props.location.state.userId\n      };\n    }\n    \n    this.getPlaylist = this.getPlaylist.bind(this);\n  }\n\ncomponentDidMount() {\n    this.getPlaylist()\n  }\n\n  getPlaylist() {\n    const recommendations_api = \"https://api.spotify.com/v1/recommendations?limit=20&seed_artists=\" + this.state.artistQuery\n    const create_playlist_api = \"https://api.spotify.com/v1/users/\" + this.state.userId + \"/playlists\"\n\n    let energy = this.state.hsl.s\n    let valence = this.state.rgb.g / 225\n\n    fetch(recommendations_api + \"&target_energy=\" + energy + \"&target_valence=\" + valence, { \n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token\n      }\n    })\n    .then((response) => {\n      if (!response.ok) throw Error(response);\n      return response.json();\n    })\n    .then((data) => {\n      let songs = ''\n      data.tracks.forEach(function(song) {\n        songs = songs + song.uri + ','\n      });\n      this.setState({\n        songs: songs\n      });\n      return songs\n    })\n    .then((songs) => {\n      fetch(create_playlist_api, {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + this.state.token\n        },\n        body: JSON.stringify({\n          \"name\": this.state.hex,\n          \"description\": \"Playlist created by Moody Music.\",\n          \"public\": false\n        })\n      })\n      .then((response) => {\n        if (!response.ok) throw Error(response);\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({\n          playlistURI: data.external_urls.spotify,\n          playlistId: data.id\n        });\n        return data.id\n      })\n      .then((playlistId) => {\n        fetch(\"https://api.spotify.com/v1/playlists/\" + playlistId + \"/tracks?uris=\" + this.state.songs, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer ' + this.state.token\n          }\n        })\n        .then((response) => {\n          if (!response.ok) throw Error(response);\n        })\n        .catch(error => {\n          console.log(error);\n          this.props.history.push(\"/error\");\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.props.history.push(\"/error\");\n      });\n    })\n    .catch(error => {\n      console.log(error);\n      this.props.history.push(\"/error\");\n    });\n  }\n\n  render() {\n    let embedURI = \"https://open.spotify.com/embed/playlist/\" + this.state.playlistId;\n    return (\n      <div className=\"content\">\n        <div className='title'>you're feeling: </div>\n        <div className='title-no-color' style={{color: this.state.hex}}>{this.state.hex}</div>\n        <div>\n          <iframe src={embedURI} id=\"embed\" title=\"Embeded Spotify Playlist\" height=\"380\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        </div>\n        <a href={this.state.playlistURI} className='round_btn'>Open in Spotify</a>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ChromePicker } from 'react-color';\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n    let token = ''\n    if (typeof this.props.location.state === 'undefined') {\n      this.props.history.push(\"/error\");\n    }\n    else {\n      token = this.props.location.state.token;\n    }\n    this.state = {\n      token: token,\n      // moodOption: this.props.location.state.moodOption,\n      hex: '#ffffff',\n      hsl: { h: 0, s: 0, l: 1 },\n      rgb: { r: 0, g: 0, b: 0 },\n      isSelected: false\n    };\n\n    this.getTopArtists = this.getTopArtists.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getTopArtists();\n  }\n\n  getTopArtists() {\n    const api_url = \"https://api.spotify.com/v1/me/top/artists?limit=5\"\n\n    fetch(api_url, { \n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token\n      }\n    })\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n      return response.json();\n    })\n    .then((data) => {\n      let items = []\n      let query = ''\n      data.items.forEach(function(artist) {\n        items.push(artist.name);\n        query = query + artist.id + ',';\n      });\n      this.setState(state => ({\n        artists: items,\n        artistQuery: query\n      }));\n    })\n    .catch(error => {\n      console.log(error);\n      this.props.history.push(\"/error\");\n    });\n  }\n\n  getUser() {\n    const api_url = \"https://api.spotify.com/v1/me\"\n\n    fetch(api_url, { \n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token\n      }\n    })\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(state => ({\n        userId: data.id\n      }));\n    })\n    .catch(error => {\n      console.log(error);\n      this.props.history.push(\"/error\");\n    });\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ \n      hex: color.hex,\n      hsl: color.hsl,\n      rgb: color.rgb,\n      isSelected: true\n    });\n  };\n\n  render() {\n    return (\n      <div className='content'>\n          <div className='title'>what color are you feeling?</div>\n          The color you pick affects the mood of the generated playlist, along with your listening history.<br/><br/><br/>\n\n\n          <ChromePicker color={ this.state.hex }\n            onChange={ this.handleChangeComplete }\n            disableAlpha = { true }\n          />\n          \n          <Link to={{\n            pathname: '/playlist',\n            state: { \n              token: this.state.token,\n              hex: this.state.hex,\n              hsl: this.state.hsl,\n              rgb: this.state.rgb,\n              artists: this.state.artists,\n              artistQuery: this.state.artistQuery,\n              userId: this.state.userId\n            }\n          }}>\n            <button className=\"round_btn\" disabled={!this.state.isSelected}>\n              Create Playlist\n            </button>\n          </Link>\n          {/* <button className=\"round_btn\">\n              Edit Color\n          </button> */}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\n\nexport default class Error extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    }\n  }\n\n  componentDidMount() {\n    this.id = setTimeout(() => this.setState({ redirect: true }), 1500)\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id)\n  }\n\n  render() {\n    return (\n      <div className='content'>\n        { this.state.redirect\n          ? \n          <div>\n            <Redirect to=\"/login\"/>\n          </div>\n          : \n          <div>\n            <div className=\"subtitle\">Authentication timed out!<br/>Redirecting you to login...</div>\n            <Link to='/'>\n              <button className=\"round_btn\">Return to Homepage</button>\n            </Link>\n          </div>\n        }\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class PageNotFound extends React.Component {\n\n  render() {\n    return (\n      <div className='content'>\n        <br/>\n        <div className=\"subtitle\">Oops! This page doesn't exist.</div>\n        <Link to='/'>\n          <button className=\"round_btn\">Return to Homepage</button>\n        </Link>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport '../css/index.css';\n\nimport About from './about';\nimport Login from './login';\nimport Home from './home';\nimport Playlist from './playlist';\nimport Color from './color';\nimport Error from './error';\nimport PageNotFound from './pagenotfound';\n\nconst Main = () => {\n\n  return (\n    <Switch className=\"switch-wrapper\">\n      <Route exact path='/' component={Home}></Route>\n      <Route exact path='/about' component={About}></Route>\n      <Route exact path='/login' component={Login}></Route>\n      <Route exact path='/color' component={Color}></Route>\n      <Route exact path='/playlist' component={Playlist}></Route>\n      <Route exact path='/error' component={Error}></Route>\n      <Route component={PageNotFound}/>\n    </Switch>\n  );\n}\n\nexport default Main;","import React from \"react\";\nimport \"../css/header.css\"\n\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <Link to='/' className=\"logo\">🎶</Link>\n        <div className=\"header-right\">\n          <Link to='/about'>about</Link>\n          <Link to='/login'>login</Link>\n        </div>\n      </div>\n    );\n  }\n}","import './css/index.css';\n\nimport React from 'react';\nimport Main from \"./components/main\";\nimport Header from \"./components/header\";\n\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header/>\n      <Main/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}